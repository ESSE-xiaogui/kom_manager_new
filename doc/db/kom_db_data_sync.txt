
UPDATE T_REGION r1 ,T_REGION r2
SET r1.PARENT_ID = r2.ID
WHERE r1.PARENT_ID = r2.REGION_CODE

-------------------------------------------------------------------------

UPDATE T_EMPLOYEE e,T_DUTY d
SET e.DUTY_ID = d.ID
WHERE e.DUTY_ID = d.DUTY_CODE

--------------------------------------------------------------------------

DROP INDEX INDEX_SHOP_SHOPID ON T_SHOP;
DROP INDEX IDX_OPTION_OBJID ON T_OPTION;
DROP INDEX IDX_USEROPTION ON T_USER_OPTION;
DROP INDEX IDX_USER_USERID ON T_USER;

CREATE INDEX INDEX_SHOP_SHOPID ON T_SHOP(SHOP_ID,ID);
CREATE INDEX IDX_OPTION_OBJID ON T_OPTION(OBJECT_ID,OPTION_CODE);
CREATE INDEX IDX_USEROPTION ON T_USER_OPTION(OPTION_ID,USER_ID);
CREATE INDEX IDX_USER_USERID ON T_USER(USER_ID,ID);

DROP VIEW VIEW_USERSHOP;
CREATE VIEW VIEW_USERSHOP AS SELECT u.ID as uid, p.ID as pid FROM T_SHOP p
INNER JOIN T_OPTION o ON o.OBJECT_ID = p.SHOP_ID
INNER JOIN T_USER_OPTION uo ON uo.OPTION_ID = o.OPTION_CODE
INNER JOIN T_USER u ON u.USER_ID = uo.USER_ID
GROUP BY u.ID,p.ID;

INSERT INTO T_USER_SHOP(USER_ID,SHOP_ID)
SELECT uid,pid FROM VIEW_USERSHOP;

---------------------------------------------------------------------------

UPDATE T_SHOP s,T_REGION r
SET s.REGION_ID = r.ID
WHERE s.CITY = r.REGION_CODE

---------------------------------------------------------------------------


UPDATE T_EMPLOYEE e,T_ORGANIZATION o SET e.ORG_ID = o.ID
WHERE e.ORG_ID = o.ORG_ID;

-----------------------------------------------------------------------------

CREATE PROCEDURE update_org_id()
BEGIN
DECLARE finished INTEGER DEFAULT 0;
DECLARE id BIGINT(20) DEFAULT 0;
DECLARE orgid CHAR(12) DEFAULT "";
DECLARE org_cur CURSOR FOR SELECT o.ID, o.ORG_ID FROM T_ORGANIZATION o ORDER BY o.ID;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET finished = 1;

OPEN org_cur;

update_org_id: LOOP
FETCH org_cur INTO id, orgid;
IF finished THEN
LEAVE update_org_id;
END IF;
UPDATE T_EMPLOYEE SET ORG_ID = id WHERE ORG_ID = orgid;
IF (MOD(id, 5000) = 0) THEN
SELECT  "................";
END IF;
END LOOP update_org_id;

CLOSE org_cur;
SELECT  "last id " + id;

END

select now();
call update_org_id;
select now();
------------------------------------------------------------------------------------

-- 停用启用修改 1 启用 2 停用
UPDATE T_BRAND SET IS_INACTIVE = 1 WHERE IS_INACTIVE = 0;
UPDATE T_COMPANY SET IS_INACTIVE = 1 WHERE IS_INACTIVE = 0;
UPDATE T_CURRENCY SET IS_INACTIVE = 1 WHERE IS_INACTIVE = 0;
UPDATE T_DUTY SET IS_INACTIVE = 1 WHERE IS_INACTIVE = 0;
UPDATE T_MODEL SET IS_INACTIVE = 1 WHERE IS_INACTIVE = 0;
UPDATE T_OPTION SET IS_INACTIVE = 1 WHERE IS_INACTIVE = 0;
UPDATE T_ORGANIZATION SET IS_INACTIVE = 1 WHERE IS_INACTIVE = 0;
UPDATE T_REGION SET IS_INACTIVE = 1 WHERE IS_INACTIVE = 0;
UPDATE T_SYSTEM_ROLE SET IS_INACTIVE = 1 WHERE IS_INACTIVE = 0;
UPDATE T_USER SET IS_INACTIVE = 1 WHERE IS_INACTIVE = 0;


-- 表数据整理
-- 员工表的u_id数据
UPDATE T_EMPLOYEE e,T_USER u SET e.U_ID = u.ID WHERE e.U_ID = u.USER_ID;

