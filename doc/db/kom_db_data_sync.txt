
UPDATE T_REGION r1 ,T_REGION r2
SET r1.PARENT_ID = r2.ID
WHERE r1.PARENT_ID = r2.REGION_CODE

-------------------------------------------------------------------------

UPDATE T_EMPLOYEE e,T_DUTY d
SET e.DUTY_ID = d.ID
WHERE e.DUTY_ID = d.DUTY_CODE

--------------------------------------------------------------------------

DROP INDEX INDEX_SHOP_SHOPID ON T_SHOP;
DROP INDEX IDX_OPTION_OBJID ON T_OPTION;
DROP INDEX IDX_USEROPTION ON T_USER_OPTION;
DROP INDEX IDX_USER_USERID ON T_USER;

CREATE INDEX INDEX_SHOP_SHOPID ON T_SHOP(SHOP_ID,ID);
CREATE INDEX IDX_OPTION_OBJID ON T_OPTION(OBJECT_ID,OPTION_CODE);
CREATE INDEX IDX_USEROPTION ON T_USER_OPTION(OPTION_ID,USER_ID);
CREATE INDEX IDX_USER_USERID ON T_USER(USER_ID,ID);

DROP VIEW VIEW_USERSHOP;
CREATE VIEW VIEW_USERSHOP AS SELECT u.ID as uid, p.ID as pid FROM T_SHOP p
INNER JOIN T_OPTION o ON o.OBJECT_ID = p.SHOP_ID
INNER JOIN T_USER_OPTION uo ON uo.OPTION_ID = o.OPTION_CODE
INNER JOIN T_USER u ON u.USER_ID = uo.USER_ID
GROUP BY u.ID,p.ID;

INSERT INTO T_USER_SHOP(USER_ID,SHOP_ID)
SELECT uid,pid FROM VIEW_USERSHOP;

---------------------------------------------------------------------------

UPDATE T_SHOP s,T_REGION r
SET s.REGION_ID = r.ID
WHERE s.CITY = r.REGION_CODE

---------------------------------------------------------------------------
UPDATE T_EMPLOYEE e,T_ORGANIZATION o SET e.ORG_ID = o.ID
WHERE e.ORG_ID = o.ORG_ID;
-----------------------------------------------------------------------------
CREATE PROCEDURE update_org_id()
BEGIN
DECLARE finished INTEGER DEFAULT 0;
DECLARE id BIGINT(20) DEFAULT 0;
DECLARE orgid CHAR(12) DEFAULT "";
DECLARE org_cur CURSOR FOR SELECT o.ID, o.ORG_ID FROM T_ORGANIZATION o ORDER BY o.ID;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET finished = 1;

OPEN org_cur;

update_org_id: LOOP
FETCH org_cur INTO id, orgid;
IF finished THEN
LEAVE update_org_id;
END IF;
UPDATE T_EMPLOYEE SET ORG_ID = id WHERE ORG_ID = orgid;
IF (MOD(id, 5000) = 0) THEN
SELECT  "................";
END IF;
END LOOP update_org_id;

CLOSE org_cur;
SELECT  "last id " + id;

END

select now();
call update_org_id;
select now();
------------------------------------------------------------------------------------

-- 停用启用修改 1 启用 2 停用
UPDATE T_BRAND SET IS_INACTIVE = 1 WHERE IS_INACTIVE = 0;
UPDATE T_COMPANY SET IS_INACTIVE = 1 WHERE IS_INACTIVE = 0;
UPDATE T_CURRENCY SET IS_INACTIVE = 1 WHERE IS_INACTIVE = 0;
UPDATE T_DUTY SET IS_INACTIVE = 1 WHERE IS_INACTIVE = 0;
UPDATE T_MODEL SET IS_INACTIVE = 1 WHERE IS_INACTIVE = 0;
UPDATE T_OPTION SET IS_INACTIVE = 1 WHERE IS_INACTIVE = 0;
UPDATE T_ORGANIZATION SET IS_INACTIVE = 1 WHERE IS_INACTIVE = 0;
UPDATE T_REGION SET IS_INACTIVE = 1 WHERE IS_INACTIVE = 0;
UPDATE T_SYSTEM_ROLE SET IS_INACTIVE = 1 WHERE IS_INACTIVE = 0;
UPDATE T_USER SET IS_INACTIVE = 1 WHERE IS_INACTIVE = 0;


-- 表数据整理
-- 员工表的u_id数据
UPDATE T_EMPLOYEE e,T_USER u SET e.U_ID = u.ID WHERE e.U_ID = u.USER_ID;

-- 销量日报查询
SELECT i.ID, s.BILLNO AS BILLNO,s.SALE_DATE AS SALE_DATE,c.ID AS COUNTRY,c.REGION_NAME AS COUNTRY_NAME,r.ID AS CITY,r.REGION_NAME AS CITY_NAME,
p.ID AS SHOP_ID,p.SHOP_NAME AS SHOP_NAME,g.GRADE_NAME AS GRADE_NAME,b.BIZ_NAME AS BIZ_NAME,i.BRAND_CODE AS BRAND_CODE,
i.MODEL_CODE AS MODEL_CODE,i.IMEI_NO AS IMEI_NO,i.IMEI_LIST AS IMEI_LIST,i.SALE_QTY AS SALE_QTY,i.SALE_PRICE AS SALE_PRICE,
i.SALE_AMOUNT AS SALE_AMOUNT,cc.EXCHANGERATE AS EXCHANGERATE,u.USER_CODE AS USER_CODE,e.EMP_NAME AS EMP_NAME,e.NATION AS NATION,
s.CREATED_TIME AS CREATED_TIME FROM T_SALE s
LEFT JOIN T_SALE_ITEM i ON i.SALE_ID = s.ID
LEFT JOIN T_SHOP p ON p.ID = s.SHOP_ID
LEFT JOIN T_SHOP_GRADE g ON g.ID = p.GRADE_ID
LEFT JOIN T_SHOP_BIZ b ON b.ID = p.BIZ_ID
LEFT JOIN T_REGION r ON r.ID = p.REGION_ID
LEFT JOIN T_REGION c ON c.ID = r.PARENT_ID
LEFT JOIN T_CURRENCY cc ON cc.REGION_ID = c.ID
LEFT JOIN T_USER u ON u.ID = s.USER_ID
LEFT JOIN T_EMPLOYEE e ON e.U_ID = u.ID 
WHERE cc.EXCHANGERATE in (
SELECT t.EXCHANGERATE FROM T_CURRENCY t WHERE (t.ENDDATE, t.CURRENCY_NAME) in(
SELECT MAX(c.ENDDATE), c.CURRENCY_NAME FROM T_CURRENCY c
LEFT JOIN T_REGION r ON r.PARENT_ID = c.REGION_ID
LEFT JOIN T_SHOP p ON r.ID = p.REGION_ID
LEFT JOIN T_SALE s ON s.SHOP_ID = p.ID
WHERE s.SHOP_ID IS NOT NULL  
GROUP BY c.CURRENCY_NAME
)) AND i.SALE_ID IS NOT NULL;

DROP VIEW SALE_LIST_VIEW;
CREATE VIEW SALE_LIST_VIEW AS  
SELECT i.ID, s.COMPANY_ID, s.BILLNO AS BILLNO,s.SALE_DATE AS SALE_DATE,c.ID AS COUNTRY,c.REGION_NAME AS COUNTRY_NAME,r.ID AS CITY,r.REGION_NAME AS CITY_NAME,
p.ID AS SHOP_ID,p.SHOP_NAME AS SHOP_NAME,i.BRAND_CODE AS BRAND_CODE,
i.MODEL_CODE AS MODEL_CODE,i.IMEI_NO AS IMEI_NO,i.IMEI_LIST AS IMEI_LIST,i.SALE_QTY AS SALE_QTY,i.SALE_PRICE AS SALE_PRICE,
i.SALE_AMOUNT AS SALE_AMOUNT,s.CURRENCY_RATIO AS EXCHANGERATE,u.USER_CODE AS USER_CODE,
s.CREATED_TIME AS CREATED_TIME FROM T_SALE s
LEFT JOIN T_SALE_ITEM i ON i.SALE_ID = s.ID
LEFT JOIN T_SHOP p ON p.ID = s.SHOP_ID
LEFT JOIN T_REGION r ON r.ID = p.REGION_ID
LEFT JOIN T_REGION c ON c.ID = r.PARENT_ID
LEFT JOIN T_USER u ON u.ID = s.USER_ID
WHERE 1=1 AND i.ID IS NOT null; 

/** SELECT i.ID, s.BILLNO AS BILLNO,s.SALE_DATE AS SALE_DATE,c.ID AS COUNTRY,c.REGION_NAME AS COUNTRY_NAME,r.ID AS CITY,r.REGION_NAME AS CITY_NAME,
p.ID AS SHOP_ID,p.SHOP_NAME AS SHOP_NAME,g.GRADE_NAME AS GRADE_NAME,b.BIZ_NAME AS BIZ_NAME,i.BRAND_CODE AS BRAND_CODE,
i.MODEL_CODE AS MODEL_CODE,i.IMEI_NO AS IMEI_NO,i.IMEI_LIST AS IMEI_LIST,i.SALE_QTY AS SALE_QTY,i.SALE_PRICE AS SALE_PRICE,
i.SALE_AMOUNT AS SALE_AMOUNT,cc.EXCHANGERATE AS EXCHANGERATE,u.USER_CODE AS USER_CODE,e.EMP_NAME AS EMP_NAME,e.NATION AS NATION,
s.CREATED_TIME AS CREATED_TIME FROM T_SALE s
LEFT JOIN T_SALE_ITEM i ON i.SALE_ID = s.ID
LEFT JOIN T_SHOP p ON p.ID = s.SHOP_ID
LEFT JOIN T_SHOP_GRADE g ON g.ID = p.GRADE_ID
LEFT JOIN T_SHOP_BIZ b ON b.ID = p.BIZ_ID
LEFT JOIN T_REGION r ON r.ID = p.REGION_ID
LEFT JOIN T_REGION c ON c.ID = r.PARENT_ID
LEFT JOIN T_CURRENCY cc ON cc.REGION_ID = c.ID
LEFT JOIN T_USER u ON u.ID = s.USER_ID
LEFT JOIN T_EMPLOYEE e ON e.U_ID = u.ID 
WHERE cc.EXCHANGERATE in (
SELECT t.EXCHANGERATE FROM T_CURRENCY t WHERE (t.ENDDATE, t.CURRENCY_NAME) in(
SELECT MAX(c.ENDDATE), c.CURRENCY_NAME FROM T_CURRENCY c
LEFT JOIN T_REGION r ON r.PARENT_ID = c.REGION_ID
LEFT JOIN T_SHOP p ON r.ID = p.REGION_ID
LEFT JOIN T_SALE s ON s.SHOP_ID = p.ID
WHERE s.SHOP_ID IS NOT NULL  
GROUP BY c.CURRENCY_NAME
)) AND i.SALE_ID IS NOT NULL;
**/
SELECT ID,BILLNO,SALE_DATE,COUNTRY,COUNTRY_NAME,CITY,CITY_NAME,SHOP_ID,SHOP_NAME,GRADE_NAME,BIZ_NAME,BRAND_CODE,MODEL_CODE,IMEI_NO,IMEI_LIST,
SALE_QTY,SALE_PRICE,SALE_AMOUNT,EXCHANGERATE,USER_CODE,EMP_NAME,NATION,CREATED_TIME FROM SALE_LIST_VIEW;

-- 事业部companyid
UPDATE T_BRAND SET COMPANY_ID = 1 WHERE COMPANY_ID = 1000 OR COMPANY_ID = 0 OR COMPANY_ID IS NULL;
UPDATE T_BRAND SET COMPANY_ID = 2 WHERE COMPANY_ID = 2000;
UPDATE T_BRAND SET COMPANY_ID = 3 WHERE COMPANY_ID = 3000;

UPDATE T_EMPLOYEE SET COMPANY_ID = 1 WHERE COMPANY_ID = 1000 OR COMPANY_ID = 0 OR COMPANY_ID IS NULL;
UPDATE T_EMPLOYEE SET COMPANY_ID = 2 WHERE COMPANY_ID = 2000;
UPDATE T_EMPLOYEE SET COMPANY_ID = 3 WHERE COMPANY_ID = 3000;

UPDATE T_CURRENCY SET COMPANY_ID = 1 WHERE COMPANY_ID = 1000 OR COMPANY_ID = 0 OR COMPANY_ID IS NULL;
UPDATE T_CURRENCY SET COMPANY_ID = 2 WHERE COMPANY_ID = 2000;
UPDATE T_CURRENCY SET COMPANY_ID = 3 WHERE COMPANY_ID = 3000;

UPDATE T_DUTY SET COMPANY_ID = 1 WHERE COMPANY_ID = 1000 OR COMPANY_ID = 0 OR COMPANY_ID IS NULL;
UPDATE T_DUTY SET COMPANY_ID = 2 WHERE COMPANY_ID = 2000;
UPDATE T_DUTY SET COMPANY_ID = 3 WHERE COMPANY_ID = 3000;

UPDATE T_MATERIEL SET COMPANY_ID = 1 WHERE COMPANY_ID = 1000 OR COMPANY_ID = 0 OR COMPANY_ID IS NULL;
UPDATE T_MATERIEL SET COMPANY_ID = 2 WHERE COMPANY_ID = 2000;
UPDATE T_MATERIEL SET COMPANY_ID = 3 WHERE COMPANY_ID = 3000;

UPDATE T_MODEL SET COMPANY_ID = 1 WHERE COMPANY_ID = 1000 OR COMPANY_ID = 0 OR COMPANY_ID IS NULL;
UPDATE T_MODEL SET COMPANY_ID = 2 WHERE COMPANY_ID = 2000;
UPDATE T_MODEL SET COMPANY_ID = 3 WHERE COMPANY_ID = 3000;

UPDATE T_ORGANIZATION SET COMPANY_ID = 1 WHERE COMPANY_ID = 1000 OR COMPANY_ID = 0 OR COMPANY_ID IS NULL;
UPDATE T_ORGANIZATION SET COMPANY_ID = 2 WHERE COMPANY_ID = 2000;
UPDATE T_ORGANIZATION SET COMPANY_ID = 3 WHERE COMPANY_ID = 3000;

UPDATE T_REGION SET COMPANY_ID = 1 WHERE COMPANY_ID = 1000 OR COMPANY_ID = 0 OR COMPANY_ID IS NULL;
UPDATE T_REGION SET COMPANY_ID = 2 WHERE COMPANY_ID = 2000;
UPDATE T_REGION SET COMPANY_ID = 3 WHERE COMPANY_ID = 3000;

UPDATE T_REGION_TYPE SET COMPANY_ID = 1 WHERE COMPANY_ID = 1000 OR COMPANY_ID = 0 OR COMPANY_ID IS NULL;
UPDATE T_REGION_TYPE SET COMPANY_ID = 2 WHERE COMPANY_ID = 2000;
UPDATE T_REGION_TYPE SET COMPANY_ID = 3 WHERE COMPANY_ID = 3000;

UPDATE T_SALE SET COMPANY_ID = 1 WHERE COMPANY_ID = 1000 OR COMPANY_ID = 0 OR COMPANY_ID IS NULL;
UPDATE T_SALE SET COMPANY_ID = 2 WHERE COMPANY_ID = 2000;
UPDATE T_SALE SET COMPANY_ID = 3 WHERE COMPANY_ID = 3000;

UPDATE T_SALE_GOAL SET COMPANY_ID = 1 WHERE COMPANY_ID = 1000 OR COMPANY_ID = 0 OR COMPANY_ID IS NULL;
UPDATE T_SALE_GOAL SET COMPANY_ID = 2 WHERE COMPANY_ID = 2000;
UPDATE T_SALE_GOAL SET COMPANY_ID = 3 WHERE COMPANY_ID = 3000;

UPDATE T_SERIES SET COMPANY_ID = 1 WHERE COMPANY_ID = 1000 OR COMPANY_ID = 0 OR COMPANY_ID IS NULL;
UPDATE T_SERIES SET COMPANY_ID = 2 WHERE COMPANY_ID = 2000;
UPDATE T_SERIES SET COMPANY_ID = 3 WHERE COMPANY_ID = 3000;

UPDATE T_SHOP SET COMPANY_ID = 1 WHERE COMPANY_ID = 1000 OR COMPANY_ID = 0 OR COMPANY_ID IS NULL;
UPDATE T_SHOP SET COMPANY_ID = 2 WHERE COMPANY_ID = 2000;
UPDATE T_SHOP SET COMPANY_ID = 3 WHERE COMPANY_ID = 3000;

UPDATE T_SHOP_BIZ SET COMPANY_ID = 1 WHERE COMPANY_ID = 1000 OR COMPANY_ID = 0 OR COMPANY_ID IS NULL;
UPDATE T_SHOP_BIZ SET COMPANY_ID = 2 WHERE COMPANY_ID = 2000;
UPDATE T_SHOP_BIZ SET COMPANY_ID = 3 WHERE COMPANY_ID = 3000;

UPDATE T_SHOP_GRADE SET COMPANY_ID = 1 WHERE COMPANY_ID = 1000 OR COMPANY_ID = 0 OR COMPANY_ID IS NULL;
UPDATE T_SHOP_GRADE SET COMPANY_ID = 2 WHERE COMPANY_ID = 2000;
UPDATE T_SHOP_GRADE SET COMPANY_ID = 3 WHERE COMPANY_ID = 3000;

UPDATE T_STOCK SET COMPANY_ID = 1 WHERE COMPANY_ID = 1000 OR COMPANY_ID = 0 OR COMPANY_ID IS NULL;
UPDATE T_STOCK SET COMPANY_ID = 2 WHERE COMPANY_ID = 2000;
UPDATE T_STOCK SET COMPANY_ID = 3 WHERE COMPANY_ID = 3000;

