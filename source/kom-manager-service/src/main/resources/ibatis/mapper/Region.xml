<?xml version="1.0" encoding="UTF-8"?> 
<!-- 
 **
 * COPYRIGHT (C) 2016 Liuzh. ALL RIGHTS RESERVED.
 *
 * No part of this publication may be reproduced, stored in a retrieval system,
 * or transmitted, on any form or by any means, electronic, mechanical, photocopying,
 * recording, or otherwise, without the prior written permission of Liuzh.
 *
 * Created By: Liuzh
 * Created On: 2016-11-18 15:56:36
 *
 * Amendment History:
 * 
 * Amended By       Amended On      Amendment Description
 * ************     ***********     *********************************************
 *
 **
 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.transsion.store.mapper.RegionMapper">
	<resultMap id="RegionResultMapper" type="Region">
		<result column="ID" property="id"/>
		<result column="COMPANY_ID" property="companyId"/>
		<result column="REGION_CODE" property="regionCode"/>
		<result column="REGION_NAME" property="regionName"/>
		<result column="PARENT_ID" property="parentId"/>
		<result column="REGION_TYPE" property="regionType"/>
		<result column="IS_INACTIVE" property="isInactive"/>
		<result column="REMARK" property="remark"/>
		<result column="CREATED_BY" property="createdBy"/>
		<result column="CREATED_TIME" property="createdTime"/>
		<result column="UPDATED_BY" property="updatedBy"/>
		<result column="UPDATED_TIME" property="updatedTime"/>
		<result column="VERSION" property="version"/>
	</resultMap>
	<resultMap id="RegionDtoResultMapper" type="RegionDto">
		<result column="ID" property="id"/>
		<result column="COMPANY_ID" property="companyId"/>
		<result column="REGION_CODE" property="regionCode"/>
		<result column="REGION_NAME" property="regionName"/>
		<result column="PREGION_NAME" property="pRegionName"/>
		<result column="PARENT_ID" property="parentId"/>
		<result column="REGION_TYPE" property="regionType"/>
		<result column="IS_INACTIVE" property="isInactive"/>
		<result column="REMARK" property="remark"/>
	</resultMap>
	
	<resultMap id="RegionShopDtoResultMapper" type="RegionShopDto">
		<result column="ID" property="id"/>
		<result column="REGION_NAME" property="regionName"/>
		<result column="CITY" property="city"/>
		<result column="SHOP_NAME" property="shopName"/>
	</resultMap>
	
	<resultMap id="ShopBindRegionDtoResultMapper" type="ShopBindRegionDto">
		<result column="ID" property="id"/>
		<result column="PARENT_ID" property="parentId"/>
		<result column="REGION_NAME" property="regionName"/>
	</resultMap>
	
	<resultMap id="ShopRegionChildrenDtoResultMapper" type="ShopRegionChildrenDto">
		<result column="ID" property="id"/>
		<result column="PARENT_ID" property="parentId"/>
		<result column="REGION_NAME" property="regionName"/>
	</resultMap>
	
	<resultMap id="RegionListDtoResultMapper" type="RegionListDto">
		<result column="ID" property="id"/>
		<result column="COMPANY_ID" property="companyId"/>
		<result column="REGION_CODE" property="regionCode"/>
		<result column="REGION_NAME" property="regionName"/>
		<result column="P_REGION_NAME" property="pRegionName"/>
		<result column="REGION_TYPE_NAME" property="regionTypeName"/>
		<result column="IS_INACTIVE" property="isInactive"/>
		<result column="REMARK" property="remark"/>
		<result column="CREATED_BY" property="createdBy"/>
		<result column="CREATED_TIME" property="createdTime"/>
		<result column="UPDATED_BY" property="updatedBy"/>
		<result column="UPDATED_TIME" property="updatedTime"/>
		<result column="VERSION" property="version"/>
	</resultMap>
	<sql id="commonColumns">
		 ID
		, COMPANY_ID
		, REGION_CODE
		, REGION_NAME
		, PARENT_ID
		, REGION_TYPE
		, IS_INACTIVE
		, REMARK
		, CREATED_BY
		, CREATED_TIME
		, UPDATED_BY
		, UPDATED_TIME
		, VERSION
	</sql>

	<sql id="commonColumnsNotPK">
		COMPANY_ID
		, REGION_CODE
		, REGION_NAME
		, PARENT_ID
		, REGION_TYPE
		, IS_INACTIVE
		, REMARK
		, CREATED_BY
		, CREATED_TIME
		, UPDATED_BY
		, UPDATED_TIME
		, VERSION
	</sql>
	
	<sql id="commonProcessDateColumns">
		 ID
		, COMPANY_ID
		, REGION_CODE
		, REGION_NAME
		, PARENT_ID
		, REGION_TYPE
		, IS_INACTIVE
		, REMARK
		, CREATED_BY
		, date_format(CREATED_TIME, '%Y-%m-%d %H:%i:%s') CREATED_TIME
		, UPDATED_BY
		, date_format(UPDATED_TIME, '%Y-%m-%d %H:%i:%s') UPDATED_TIME
		, VERSION
	</sql>
	
	<sql id="commonCondition">
		<if test="id!= null and id!= ''"> 
			AND ID=#{id}
		</if>
		<if test="companyId!= null and companyId!= ''"> 
			AND COMPANY_ID=#{companyId}
		</if>
		<if test="regionCode!= null and regionCode!= ''"> 
			AND REGION_CODE=#{regionCode}
		</if>
		<if test="regionName!= null and regionName!= ''"> 
			AND REGION_NAME=#{regionName}
		</if>
		<if test="parentId!= null and parentId!= ''"> 
			AND PARENT_ID=#{parentId}
		</if>
		<if test="regionType!= null and regionType!= ''"> 
			AND REGION_TYPE=#{regionType}
		</if>
		<if test="isInactive!= null and isInactive!= ''"> 
			AND IS_INACTIVE=#{isInactive}
		</if>
		<if test="remark!= null and remark!= ''"> 
			AND REMARK=#{remark}
		</if>
		<if test="createdBy!= null and createdBy!= ''"> 
			AND CREATED_BY=#{createdBy}
		</if>
		<if test="createdTime!= null and createdTime!= ''"> 
			AND CREATED_TIME=str_to_date(#{createdTime},'%Y-%m-%d %H:%i:%s')
		</if>
		<if test="updatedBy!= null and updatedBy!= ''"> 
			AND UPDATED_BY=#{updatedBy}
		</if>
		<if test="updatedTime!= null and updatedTime!= ''"> 
			AND UPDATED_TIME=str_to_date(#{updatedTime},'%Y-%m-%d %H:%i:%s')
		</if>
		<if test="version!= null and version!= ''"> 
			AND VERSION=#{version}
		</if>
	</sql>

	<sql id="commonConditionByPrefix">
		<if test="regionListDto != null">
            <if test="regionListDto.id!= null and regionListDto.id!= ''">
				AND r1.ID=#{regionListDto.id}
            </if>
            <if test="regionListDto.companyId!= null and regionListDto.companyId!= ''">
				AND r1.COMPANY_ID=#{regionListDto.companyId}
            </if>
            <if test="regionListDto.regionCode!= null and regionListDto.regionCode!= ''">
				AND r1.REGION_CODE=#{regionListDto.regionCode}
            </if>
            <if test="regionListDto.regionName!= null and regionListDto.regionName!= ''">
				AND r1.REGION_NAME=#{regionListDto.regionName}
            </if>
            <if test="regionListDto.pRegionName!= null and regionListDto.pRegionName!= ''">
				AND r2.REGION_NAME=#{regionListDto.pRegionName}
            </if>
            <if test="regionListDto.regionTypeName!= null and regionListDto.regionTypeName!= ''">
				AND y.REGION_TYPE=#{regionListDto.regionTypeName}
            </if>
            <if test="regionListDto.isInactive!= null and regionListDto.isInactive!= ''">
				AND r1.IS_INACTIVE=#{regionListDto.isInactive}
            </if>
            <if test="regionListDto.remark!= null and regionListDto.remark!= ''">
				AND r1.REMARK=#{regionListDto.remark}
            </if>
            <if test="regionListDto.createdBy!= null and regionListDto.createdBy!= ''">
				AND r1.CREATED_BY=#{regionListDto.createdBy}
            </if>
            <if test="regionListDto.createdTime!= null and regionListDto.createdTime!= ''">
				AND r1.CREATED_TIME=str_to_date(#{regionListDto.createdTime},'%Y-%m-%d %H:%i:%s')
            </if>
            <if test="regionListDto.updatedBy!= null and regionListDto.updatedBy!= ''">
				AND r1.UPDATED_BY=#{regionListDto.updatedBy}
            </if>
            <if test="regionListDto.updatedTime!= null and regionListDto.updatedTime!= ''">
				AND r1.UPDATED_TIME=str_to_date(#{regionListDto.updatedTime},'%Y-%m-%d %H:%i:%s')
            </if>
            <if test="regionListDto.version!= null and regionListDto.version!= ''">
				AND r1.VERSION=#{regionListDto.version}
            </if>
        </if>
    </sql>
      

	<sql id="orderByClause">
		<if test="orderBy != null">
			<foreach collection="orderBy" index="key" item="value"
					 open=" order by " separator="," close=" ">
				<include refid="orderBy" />
			</foreach>
		</if>
	</sql>

	<sql id="orderBy">
		<choose>
        	<when test="key == 'id'">
				r1.ID ${value}
            </when>
            <when test="key == 'companyId'">
				r1.COMPANY_ID ${value}
            </when>
        	<when test="key == 'regionCode'">
				r1.REGION_CODE ${value}
            </when>
        	<when test="key == 'regionName'">
				r1.REGION_NAME ${value}
            </when>
        	<when test="key == 'pRegionName'">
				r2.REGION_NAME ${value}
            </when>
        	<when test="key == 'regionTypeName'">
				y.REGION_TYPE ${value}
            </when>
        	<when test="key == 'isInactive'">
				r1.IS_INACTIVE ${value}
            </when>
        	<when test="key == 'remark'">
				r1.REMARK ${value}
            </when>
        	<when test="key == 'createdBy'">
				r1.CREATED_BY ${value}
            </when>
        	<when test="key == 'createdTime'">
				r1.CREATED_TIME ${value}
            </when>
        	<when test="key == 'updatedBy'">
				r1.UPDATED_BY ${value}
            </when>
        	<when test="key == 'updatedTime'">
				r1.UPDATED_TIME ${value}
            </when>
        	<when test="key == 'version'">
				r1.VERSION ${value}
            </when>
		</choose>
	</sql>

	<insert id="save" useGeneratedKeys="true" keyProperty="id" parameterType="Region">
		<![CDATA[ INSERT INTO T_REGION ( ]]>
		<include refid="commonColumnsNotPK"/>
		<![CDATA[
			) VALUES (
			#{companyId} 
			, #{regionCode}
			, #{regionName}
			, #{parentId}
			, #{regionType}
			, #{isInactive}
			, #{remark}
			, #{createdBy}
			, str_to_date(#{createdTime},'%Y-%m-%d %H:%i:%s')
			, #{updatedBy}
			, str_to_date(#{updatedTime},'%Y-%m-%d %H:%i:%s')
			, #{version}
  ) ]]>
	</insert>
	<update id="update" parameterType="Region">
		<![CDATA[ UPDATE T_REGION SET 
			 ID=#{id} 
			, COMPANY_ID=#{companyId}
			, REGION_CODE=#{regionCode} 
			, REGION_NAME=#{regionName} 
			, PARENT_ID=#{parentId} 
			, REGION_TYPE=#{regionType} 
			, IS_INACTIVE=#{isInactive} 
			, REMARK=#{remark} 
			, CREATED_BY=#{createdBy} 
			, CREATED_TIME=str_to_date(#{createdTime},'%Y-%m-%d %H:%i:%s')
			, UPDATED_BY=#{updatedBy} 
			, UPDATED_TIME=str_to_date(#{updatedTime},'%Y-%m-%d %H:%i:%s')
			, VERSION=#{version} 
		WHERE ID = #{id}  ]]>
	</update>
	<delete id="deleteByPK" parameterType="java.lang.Long">
		<![CDATA[ DELETE FROM T_REGION WHERE ID = #{id}  ]]>
	</delete>
	<delete id="deleteByPKeys" parameterType="map">
		DELETE FROM T_REGION WHERE
		<foreach collection="primaryKeys" index="index" item="id"
			open=" ID IN(" separator="," close=") ">
			#{id}
		</foreach>
	</delete>
	<delete id="deleteByProperty" parameterType="Region">
		DELETE FROM T_REGION WHERE 1 = 1
		<include refid="commonCondition"/>
	</delete>
	<select id="getByPK" parameterType="java.lang.Long" resultMap="RegionResultMapper">
		<![CDATA[ SELECT ]]>
			 <include refid="commonProcessDateColumns"/>
		FROM T_REGION WHERE ID = #{id}  
	</select>
	<select id="list" resultMap="RegionResultMapper">
		<![CDATA[ SELECT ]]>
			 <include refid="commonProcessDateColumns"/>
 		FROM T_REGION
	</select>
	<select id="listByProperty" parameterType="Region" resultMap="RegionResultMapper">
		<![CDATA[ SELECT ]]>
			<include refid="commonProcessDateColumns"/>
		FROM T_REGION WHERE 1=1 
		<include refid="commonCondition"/>
	</select>
	<select id="listPaginationByProperty" parameterType="RegionListDto"
		resultMap="RegionListDtoResultMapper">
		SELECT r1.ID, r1.COMPANY_ID, r1.REGION_CODE, r1.REGION_NAME,
		r2.REGION_NAME AS P_REGION_NAME,y.REGION_TYPE AS REGION_TYPE_NAME,
		r1.IS_INACTIVE,r1.REMARK, r1.CREATED_BY, r1.UPDATED_BY,
		r1.CREATED_TIME, r1.UPDATED_TIME,r1.VERSION
		FROM T_REGION r1
		LEFT JOIN T_REGION r2 ON r2.ID = r1.PARENT_ID
		LEFT JOIN T_REGION_TYPE y ON r1.REGION_TYPE =y.ID
		WHERE 1=1
		<include refid="commonConditionByPrefix" />
		<include refid="orderByClause" />
	</select>
	<select id="findByCount" parameterType="Region" resultType="int">
		SELECT count(1) AS totalcount FROM T_REGION WHERE 1=1 
		<include refid="commonCondition"/>
	</select>
	<select id="findRegionsList"  parameterType="java.lang.Integer" resultMap = "RegionDtoResultMapper">
		SELECT ID, PARENT_ID, REGION_CODE, REGION_NAME FROM T_REGION WHERE COMPANY_ID = #{companyId}
	</select>
	<select id="getRegionName"  parameterType="java.lang.Long" resultType = "String">
		SELECT REGION_NAME FROM T_REGION WHERE ID = #{id} 
	</select>
	<select id="getByPKs" parameterType="java.lang.Long" resultMap="RegionDtoResultMapper">
		SELECT o1.ID AS ID,o1.COMPANY_ID AS COMPANY_ID,o1.PARENT_ID AS
		PARENT_ID,o2.REGION_NAME AS PREGION_NAME,
		o1.REGION_NAME AS
		REGION_NAME,o1.REGION_TYPE AS REGION_TYPE,o1.IS_INACTIVE AS
		IS_INACTIVE,o1.REMARK AS REMARK
		FROM T_REGION o1
		LEFT JOIN T_REGION o2
		ON o2.ID = o1.PARENT_ID
		WHERE o1.ID = #{id}
	</select>
	<select id="findRegionShop" parameterType="java.lang.Integer"
		resultMap="RegionShopDtoResultMapper">
		SELECT MAX(r.ID) AS ID, r.REGION_NAME FROM T_REGION r
		LEFT
		JOIN T_SHOP p ON p.CITY = r.ID
		WHERE r.COMPANY_ID = #{companyId} AND
		p.SHOP_NAME IS NOT NULL
		GROUP BY r.REGION_NAME
	</select>
	<select id="findRegion" parameterType="java.lang.String" resultMap="ShopBindRegionDtoResultMapper">
		SELECT r.ID,r.REGION_NAME FROM T_REGION r
		JOIN T_REGION c ON c.PARENT_ID = r.ID
		JOIN T_SHOP p ON p.REGION_ID = c.ID
		<if test="userName!= null and userName!= ''">
		JOIN T_USER_SHOP us ON us.SHOP_ID = p.ID
		JOIN T_USER u ON u.ID = us.USER_ID  
        </if>
		WHERE p.COMPANY_ID = 1000 AND p.REGION_ID IS NOT NULL
		<if test="userName!= null and userName!= ''">
		AND u.USER_CODE = #{userName}
		</if>  
		GROUP BY r.ID,r.REGION_NAME
	</select>
	<select id="findRegionChildren" resultMap="ShopRegionChildrenDtoResultMapper">
		SELECT c.ID,c.REGION_NAME FROM T_REGION c
		LEFT JOIN T_SHOP p ON p.REGION_ID = c.ID
		<if test="userName!= null and userName!= ''">
		JOIN T_USER_SHOP us ON us.SHOP_ID = p.ID
		JOIN T_USER u ON u.ID = us.USER_ID  
		</if>
		WHERE c.PARENT_ID = #{parentId}  AND p.COMPANY_ID = 1000 AND p.REGION_ID IS NOT NULL
		<if test="userName!= null and userName!= ''">
		AND u.USER_CODE = #{userName}
		</if> 
		GROUP BY c.ID,c.REGION_NAME
	</select>
	<select id="getCityAll" parameterType="java.lang.Long" resultType="List">
	<![CDATA[ SELECT ]]>
			 <include refid="commonProcessDateColumns"/>
		FROM T_REGION WHERE PARENT_ID = #{parentId} 
	</select>
	<select id="queryRegionByTypeCode" parameterType="int"
		resultMap="RegionResultMapper">
		SELECT ID,REGION_NAME,PARENT_ID FROM T_REGION 
		WHERE TYPE_CODE=#{typeCode}
	</select>
</mapper>