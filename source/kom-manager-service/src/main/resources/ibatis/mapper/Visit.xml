<?xml version="1.0" encoding="UTF-8"?> 
<!-- 
 **
 * COPYRIGHT (C) 2016 Liuzh. ALL RIGHTS RESERVED.
 *
 * No part of this publication may be reproduced, stored in a retrieval system,
 * or transmitted, on any form or by any means, electronic, mechanical, photocopying,
 * recording, or otherwise, without the prior written permission of Liuzh.
 *
 * Created By: Liuzh
 * Created On: 2017-2-21 10:24:47
 *
 * Amendment History:
 * 
 * Amended By       Amended On      Amendment Description
 * ************     ***********     *********************************************
 *
 **
 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.transsion.store.mapper.VisitMapper">
	<resultMap id="VisitResultMapper" type="Visit">
		<result column="ID" property="id"/>
		<result column="VISIT_DATE" property="visitDate"/>
		<result column="COMPANY_ID" property="companyId"/>
		<result column="SHOP_ID" property="shopId"/>
		<result column="PLAN_TYPE" property="planType"/>
		<result column="SALE_TOTAL_QTY" property="saleTotalQty"/>
		<result column="SALE_PB_QTY" property="salePbQty"/>
		<result column="REMARK" property="remark"/>
		<result column="CREATE_BY" property="createBy"/>
		<result column="CREATE_TIME" property="createTime"/>
		<result column="UPDATE_BY" property="updateBy"/>
		<result column="UPDATE_TIME" property="updateTime"/>
		<result column="VERSION" property="version"/>
		<result column="VISTOR" property="vistor"/>
		<result column="COMPANY_CODE" property="companyCode"/>
		<result column="SHOP_CODE" property="shopCode"/>
		<result column="SHOP_NAME" property="shopName"/>
		<result column="COUNTRY_NAME" property="countryName"/>
		<result column="CITY_NAME" property="cityName"/>
		<result column="EMP_NAME" property="empName"/>
	</resultMap>
	
	<resultMap id="VisitInfoDtoResultMapper" type="VisitInfoDto">
		<result column="ID" property="id"/>
		<result column="VISIT_DATE" property="planDate"/>
		<result column="SHOP_ID" property="shopId"/>
		<result column="SHOP_NAME" property="shopName"/>
		<result column="GRADE_ID" property="gradeId"/>
		<result column="GRADE_NAME" property="gradeName"/>
		<result column="VISTOR" property="planner"/>
	</resultMap>
	
	<resultMap id="VisitDtoResultMapper" type="VisitDto">
		<result column="ID" property="id"/>
		<result column="VISIT_DATE" property="visitDate"/>
		<result column="SHOP_ID" property="shopId"/>
		<result column="SALE_CURRENT" property="currentSaleQty"/>
		<result column="SALE_TARGET" property="targetSaleQty"/>
		<result column="ACHIEVED" property="achieved"/>
		<result column="SALE_TOTAL_QTY" property="saleTotalQty"/>
		<result column="SALE_PB_QTY" property="salePbQty"/>
		<result column="REMARK" property="remark"/>
		<result column="CREATE_BY" property="createBy"/>
		<result column="CREATE_TIME" property="createTime"/>
		<result column="UPDATE_BY" property="updateBy"/>
		<result column="UPDATE_TIME" property="updateTime"/>
	</resultMap>
	
	<resultMap id="VisitShopInfoDtoResultMapper" type="VisitShopInfoDto">
		<result column="SHOP_ID" property="shopId"/>
		<result column="SHOP_NAME" property="shopName"/>
		<result column="GRADE_ID" property="gradeId"/>
		<result column="GRADE_NAME" property="gradeName"/>
		<result column="REGION_NAME" property="cityName"/>
		<result column="SALE_CURRENT" property="currentSaleQty"/>
		<result column="SALE_TARGET" property="targetSaleQty"/>
	</resultMap>
	
	<resultMap id="VisitShopDtoResultMapper" type="VisitShopDto">
		<result column="ID" property="id"/>
		<result column="VISIT_DATE" property="visitDate"/>
		<result column="SHOP_ID" property="shopId"/>
		<result column="SHOP_NAME" property="shopName"/>
		<result column="SALE_CURRENT" property="currentSaleQty"/>
		<result column="SALE_TARGET" property="targetSaleQty"/>
		<result column="ACHIEVED" property="achieved"/>
		<result column="SALE_TOTAL_QTY" property="saleTotalQty"/>
		<result column="SALE_PB_QTY" property="salePbQty"/>
		<result column="REMARK" property="remark"/>
	</resultMap>
	
	<resultMap id="VisitHistorySummaryDtoResultMapper" type="VisitHistorySummaryDto">
		<result column="VISIT_DATE" property="visitDate"/>
		<result column="VISIT_QTY" property="visitStoreQty"/>
	</resultMap>
	
	<resultMap id="VisitShopDetailDtoResultMapper" type="VisitShopDetailDto">
		<result column="SHOP_SCORE" property="shopScore"/>
		<result column="SALE_SCORE" property="saleScore"/>
		<result column="STAFF_SCORE" property="staffScore"/>
		<result column="TOTAL_SCORE" property="totalScore"/>
		<result column="ISSUE" property="issue"/>
		<result column="ACTION" property="action"/>
	</resultMap>
	
	<resultMap id="VisitScoreInfoDtoResultMapper" type="VisitScoreInfoDto">
		<result column="TYPE" property="type"/>
		<result column="DESC_CN" property="descCn"/>
		<result column="DESC_EN" property="descEn"/>
		<result column="SCORE" property="score"/>
	</resultMap>
	
	<resultMap id="VisitModelDetailDtoResultMapper" type="VisitModelDetailDto">
		<result column="SERIES_CODE" property="seriesCode"/>
		<result column="MODEL_CODE" property="modelCode"/>
	</resultMap>
	<resultMap id="VisitSaleDetailDtoResultMapper" type="VisitSaleDetailDto">
		<result column="MODEL_CODE" property="modelCode"/>
		<result column="SALE_QTY" property="saleQty"/>
	</resultMap>
	<resultMap id="VisitCompetitorInfoDtoResultMapper" type="VisitCompetitorInfoDto">
		<result column="BRAND_NAME" property="brandName"/>
		<result column="SALE_QTY" property="saleQty"/>
	</resultMap>
	<resultMap id="VisitMaterielDetailDtoResultMapper" type="VisitMaterielDetailDto">
		<result column="NAME_EN" property="nameEn"/>
		<result column="TYPE" property="type"/>
	</resultMap>
	
	<sql id="commonColumns">
		 ID
		, VISIT_DATE
		, COMPANY_ID
		, SHOP_ID
		, PLAN_TYPE
		, SALE_TOTAL_QTY
		, SALE_PB_QTY
		, REMARK
		, CREATE_BY
		, CREATE_TIME
		, UPDATE_BY
		, UPDATE_TIME
		, VERSION
	</sql>

	<sql id="commonColumnsNotPK">
		 VISIT_DATE
		, COMPANY_ID
		, SHOP_ID
		, PLAN_TYPE
		, SALE_TOTAL_QTY
		, SALE_PB_QTY
		, REMARK
		, CREATE_BY
		, CREATE_TIME
		, UPDATE_BY
		, UPDATE_TIME
		, VERSION
		, VISTOR
	</sql>
	
	<sql id="commonProcessDateColumns">
		 ID
		, date_format(VISIT_DATE, '%Y-%m-%d %H:%i:%s') VISIT_DATE
		, COMPANY_ID
		, SHOP_ID
		, PLAN_TYPE
		, SALE_TOTAL_QTY
		, SALE_PB_QTY
		, REMARK
		, CREATE_BY
		, date_format(CREATE_TIME, '%Y-%m-%d %H:%i:%s') CREATE_TIME
		, UPDATE_BY
		, date_format(UPDATE_TIME, '%Y-%m-%d %H:%i:%s') UPDATE_TIME
		, VERSION
	</sql>
	
	<sql id="commonCondition">
		<if test="id!= null and id!= ''"> 
			AND ID=#{id}
		</if>
		<if test="visitDate!= null and visitDate!= ''"> 
			AND VISIT_DATE=str_to_date(#{visitDate},'%Y-%m-%d %H:%i:%s')
		</if>
		<if test="companyId!= null and companyId!= ''"> 
			AND COMPANY_ID=#{companyId}
		</if>
		<if test="shopId!= null and shopId!= ''"> 
			AND SHOP_ID=#{shopId}
		</if>
		<if test="planType!= null and planType!= ''"> 
			AND PLAN_TYPE=#{planType}
		</if>
		<if test="saleTotalQty!= null and saleTotalQty!= ''"> 
			AND SALE_TOTAL_QTY=#{saleTotalQty}
		</if>
		<if test="salePbQty!= null and salePbQty!= ''"> 
			AND SALE_PB_QTY=#{salePbQty}
		</if>
		<if test="remark!= null and remark!= ''"> 
			AND REMARK=#{remark}
		</if>
		<if test="createBy!= null and createBy!= ''"> 
			AND CREATE_BY=#{createBy}
		</if>
		<if test="createTime!= null and createTime!= ''"> 
			AND CREATE_TIME=str_to_date(#{createTime},'%Y-%m-%d %H:%i:%s')
		</if>
		<if test="updateBy!= null and updateBy!= ''"> 
			AND UPDATE_BY=#{updateBy}
		</if>
		<if test="updateTime!= null and updateTime!= ''"> 
			AND UPDATE_TIME=str_to_date(#{updateTime},'%Y-%m-%d %H:%i:%s')
		</if>
		<if test="version!= null and version!= ''"> 
			AND VERSION=#{version}
		</if>
	</sql>
	<sql id="commonConditionByParam">
		<if test="companyId!= null and companyId!= ''"> 
			AND COMPANY_ID=#{companyId}
		</if>
		<if test="planner!= null and planner!= ''"> 
			AND VISTOR=#{planner}
		</if>		
		<if test="beginDate!= null and beginDate!= ''"> 
			AND VISIT_DATE&gt;=str_to_date(#{beginDate},'%Y-%m-%d')
		</if>		
		<if test="endDate!= null and endDate!= ''"> 
			AND VISIT_DATE&lt;=str_to_date(#{endDate},'%Y-%m-%d')
		</if>		
	</sql>
	<sql id="commonConditionByPrefix">
		<if test="visit != null">
            <if test="visit.id!= null and visit.id!= ''">
				AND v.ID=#{visit.id}
            </if>
            <if test="visit.visitDate!= null and visit.visitDate!= ''">
				AND v.VISIT_DATE=str_to_date(#{visit.visitDate},'%Y-%m-%d %H:%i:%s')
            </if>
            <if test="visit.companyId!= null and visit.companyId!= ''">
				AND v.COMPANY_ID=#{visit.companyId}
            </if>
            <if test="visit.shopId!= null and visit.shopId!= ''">
				AND v.SHOP_ID=#{visit.shopId}
            </if>
            <if test="visit.planType!= null and visit.planType!= ''">
				AND v.PLAN_TYPE=#{visit.planType}
            </if>
            <if test="visit.saleTotalQty!= null and visit.saleTotalQty!= ''">
				AND v.SALE_TOTAL_QTY=#{visit.saleTotalQty}
            </if>
            <if test="visit.salePbQty!= null and visit.salePbQty!= ''">
				AND v.SALE_PB_QTY=#{visit.salePbQty}
            </if>
            <if test="visit.remark!= null and visit.remark!= ''">
				AND v.REMARK=#{visit.remark}
            </if>
            <if test="visit.createBy!= null and visit.createBy!= ''">
				AND v.CREATE_BY=#{visit.createBy}
            </if>
            <if test="visit.updateBy!= null and visit.updateBy!= ''">
				AND v.UPDATE_BY=#{visit.updateBy}
            </if>
            <if test="visit.updateTime!= null and visit.updateTime!= ''">
				AND v.UPDATE_TIME=str_to_date(#{visit.updateTime},'%Y-%m-%d %H:%i:%s')
            </if>
            <if test="visit.version!= null and visit.version!= ''">
				AND v.VERSION=#{visit.version}
            </if>
            
            <if test="visit.shopName!= null and visit.shopName!= ''">
				AND s.SHOP_NAME=#{visit.shopName}
            </if>
            <if test="visit.shopCode!= null and visit.shopCode!= ''">
				AND s.SHOP_CODE=#{visit.shopCode}
            </if>
            <if test="visit.regionId!= null and visit.regionId!= ''">
				AND r.ID=#{visit.regionId}
            </if>
            <if test="visit.startDate!= null and visit.startDate!= ''">
				AND DATE_FORMAT(v.CREATE_TIME, '%Y-%m-%d') &gt;=str_to_date(#{visit.startDate},'%Y-%m-%d %H:%i:%s')
            </if>
            <if test="visit.endDate!= null and visit.endDate!= ''">
				AND DATE_FORMAT(v.CREATE_TIME, '%Y-%m-%d') &lt;=str_to_date(#{visit.endDate},'%Y-%m-%d %H:%i:%s')
            </if>
        </if>
    </sql>

	<sql id="orderByClause">
		<if test="orderBy != null">
			<foreach collection="orderBy" index="key" item="value"
					 open=" order by " separator="," close=" ">
				<include refid="orderBy" />
			</foreach>
		</if>
	</sql>

	<sql id="orderBy">
		<choose>
        	<when test="key == 'id'">
				v.ID ${value}
            </when>
        	<when test="key == 'visitDate'">
				v.VISIT_DATE ${value}
            </when>
        	<when test="key == 'companyId'">
				v.COMPANY_ID ${value}
            </when>
        	<when test="key == 'shopId'">
				v.SHOP_ID ${value}
            </when>
        	<when test="key == 'planType'">
				v.PLAN_TYPE ${value}
            </when>
        	<when test="key == 'saleTotalQty'">
				v.SALE_TOTAL_QTY ${value}
            </when>
        	<when test="key == 'salePbQty'">
				v.SALE_PB_QTY ${value}
            </when>
        	<when test="key == 'remark'">
				v.REMARK ${value}
            </when>
        	<when test="key == 'createBy'">
				v.CREATE_BY ${value}
            </when>
        	<when test="key == 'createTime'">
				v.CREATE_TIME ${value}
            </when>
        	<when test="key == 'updateBy'">
				v.UPDATE_BY ${value}
            </when>
        	<when test="key == 'updateTime'">
				v.UPDATE_TIME ${value}
            </when>
        	<when test="key == 'version'">
				v.VERSION ${value}
            </when>
		</choose>
	</sql>

	<insert id="save" useGeneratedKeys="true" keyProperty="id" parameterType="Visit">
		<![CDATA[ INSERT INTO T_VISIT ( ]]>
		<include refid="commonColumnsNotPK"/>
		<![CDATA[
			) VALUES ( 
			 str_to_date(#{visitDate},'%Y-%m-%d %H:%i:%s')
			, #{companyId}
			, #{shopId}
			, #{planType}
			, #{saleTotalQty}
			, #{salePbQty}
			, #{remark}
			, #{createBy}
			, str_to_date(#{createTime},'%Y-%m-%d %H:%i:%s')
			, #{updateBy}
			, str_to_date(#{updateTime},'%Y-%m-%d %H:%i:%s')
			, #{version}
			, #{vistor}
  ) ]]>
	</insert>
	<update id="update" parameterType="Visit">
		<![CDATA[ UPDATE T_VISIT SET 
			 ID=#{id} 
			, VISIT_DATE=str_to_date(#{visitDate},'%Y-%m-%d %H:%i:%s')
			, COMPANY_ID=#{companyId} 
			, SHOP_ID=#{shopId} 
			, PLAN_TYPE=#{planType} 
			, SALE_TOTAL_QTY=#{saleTotalQty} 
			, SALE_PB_QTY=#{salePbQty} 
			, REMARK=#{remark} 
			, CREATE_BY=#{createBy} 
			, CREATE_TIME=str_to_date(#{createTime},'%Y-%m-%d %H:%i:%s')
			, UPDATE_BY=#{updateBy} 
			, UPDATE_TIME=str_to_date(#{updateTime},'%Y-%m-%d %H:%i:%s')
			, VERSION=#{version} 
		WHERE ID = #{id}  ]]>
	</update>
	<delete id="deleteByPK" parameterType="java.lang.Long">
		<![CDATA[ DELETE FROM T_VISIT WHERE ID = #{id}  ]]>
	</delete>
	<delete id="deleteByPKeys" parameterType="map">
		DELETE FROM T_VISIT WHERE
		<foreach collection="primaryKeys" index="index" item="id"
			open=" ID IN(" separator="," close=") ">
			#{id}
		</foreach>
	</delete>
	<delete id="deleteByProperty" parameterType="Visit">
		DELETE FROM T_VISIT WHERE 1 = 1
		<include refid="commonCondition"/>
	</delete>
	<select id="getByPK" parameterType="java.lang.Long" resultMap="VisitResultMapper">
		<![CDATA[ SELECT ]]>
			 <include refid="commonProcessDateColumns"/>
		FROM T_VISIT WHERE ID = #{id}  
	</select>
	<select id="list" resultMap="VisitResultMapper">
		<![CDATA[ SELECT ]]>
			 <include refid="commonProcessDateColumns"/>
 		FROM T_VISIT
	</select>
	<select id="listByProperty" parameterType="Visit" resultMap="VisitResultMapper">
		<![CDATA[ SELECT ]]>
			<include refid="commonProcessDateColumns"/>
		FROM T_VISIT WHERE 1=1 
		<include refid="commonCondition"/>
	</select>
	<select id="listPaginationByProperty" parameterType="Visit" resultMap="VisitResultMapper">
		SELECT 
			v.ID, 
			c.COMPANY_CODE,
			s.SHOP_CODE,
			s.SHOP_NAME,
			r.REGION_NAME AS COUNTRY_NAME,
			e.REGION_NAME AS CITY_NAME,
			v.PLAN_TYPE,
			v.CREATE_BY,
			v.CREATE_TIME,
			v.SALE_TOTAL_QTY,
			m.EMP_NAME
		FROM T_VISIT v 
		LEFT JOIN T_COMPANY c ON v.COMPANY_ID = c.ID 
		LEFT JOIN T_SHOP s ON v.SHOP_ID = s.ID
		LEFT JOIN T_REGION r ON s.COUNTRY = r.ID
		LEFT JOIN T_REGION e ON s.CITY = e.ID
		LEFT JOIN T_USER u ON v.CREATE_BY = u.USER_CODE
		LEFT JOIN T_EMPLOYEE m ON u.ID = m.U_ID
		WHERE 1=1
    	<include refid="commonConditionByPrefix"/>
    	<include refid="orderByClause" />
	</select>
	<select id="listVisitShopSaleByProperty" parameterType="Visit" resultMap="VisitResultMapper">
		SELECT 
			v.ID, 
			c.COMPANY_CODE,
			s.SHOP_CODE,
			s.SHOP_NAME,
			r.REGION_NAME AS COUNTRY_NAME,
			e.REGION_NAME AS CITY_NAME,
			v.PLAN_TYPE,
			v.CREATE_BY,
			v.CREATE_TIME,
			v.SALE_TOTAL_QTY,
			m.EMP_NAME
		FROM T_VISIT v 
		LEFT JOIN T_COMPANY c ON v.COMPANY_ID = c.ID 
		LEFT JOIN T_SHOP s ON v.SHOP_ID = s.ID
		LEFT JOIN T_REGION r ON s.COUNTRY = r.ID
		LEFT JOIN T_REGION e ON s.CITY = e.ID
		LEFT JOIN T_USER u ON v.CREATE_BY = u.USER_CODE
		LEFT JOIN T_EMPLOYEE m ON u.ID = m.U_ID
		WHERE 1=1
    	<include refid="commonConditionByPrefix"/>
    	ORDER BY v.CREATE_TIME DESC
	</select>
	<select id="listShopHistoryByProperty" parameterType="Visit" resultMap="VisitResultMapper">
		SELECT 
			v.ID, 
			c.COMPANY_CODE,
			s.SHOP_CODE,
			s.SHOP_NAME,
			v.PLAN_TYPE,
			r.REGION_NAME AS COUNTRY_NAME,
			e.REGION_NAME AS CITY_NAME,
			v.PLAN_TYPE,
			v.CREATE_BY,
			v.CREATE_TIME,
			v.SALE_TOTAL_QTY,
			m.EMP_NAME
		FROM T_VISIT v 
		LEFT JOIN T_COMPANY c ON v.COMPANY_ID = c.ID 
		LEFT JOIN T_SHOP s ON v.SHOP_ID = s.ID
		LEFT JOIN T_REGION r ON s.COUNTRY = r.ID
		LEFT JOIN T_REGION e ON s.CITY = e.ID
		LEFT JOIN T_USER u ON v.CREATE_BY = u.USER_CODE
		LEFT JOIN T_EMPLOYEE m ON u.ID = m.U_ID
		WHERE 1=1
    	<include refid="commonConditionByPrefix"/>
    	ORDER BY v.CREATE_TIME DESC
	</select>
	<select id="findByCount" parameterType="Visit" resultType="int">
		SELECT count(1) AS totalcount FROM T_VISIT WHERE 1=1 
		<include refid="commonCondition"/>
	</select>	
	<select id="queryUnplanedVisitList" parameterType="VisitInfoDto" resultMap="VisitInfoDtoResultMapper">
		SELECT v.*, s.SHOP_NAME, s.GRADE_ID, g.GRADE_NAME FROM T_VISIT v LEFT JOIN T_SHOP s ON v.SHOP_ID = s.ID 
		LEFT JOIN T_SHOP_GRADE g ON s.GRADE_ID = g.ID 
		WHERE v.VISIT_DATE = #{planDate} AND v.VISTOR = #{planner}
	</select>
	
	<select id="queryVisitShopInfo" parameterType="VisitShopInfoDto" resultMap="VisitShopInfoDtoResultMapper">
		SELECT v.*, s.SHOP_NAME, g.GRADE_NAME, r.REGION_NAME FROM T_VISIT v 
		LEFT JOIN T_SHOP s ON v.SHOP_ID = s.ID 
		LEFT JOIN T_SHOP_GRADE g ON s.GRADE_ID = g.ID
		LEFT JOIN T_REGION r ON s.REGION_ID = r.ID
		WHERE v.SHOP_ID = #{shopId} AND v.VISIT_DATE = #{planDate}
	</select>
	
	<select id="queryVisitByVisitId" parameterType="java.lang.Long" resultMap="VisitShopDtoResultMapper">
		SELECT * FROM T_VISIT WHERE ID = #{visitId}
	</select>
	
	<insert id="saveVisitDto" parameterType="VisitDto">
		INSERT INTO T_VISIT(
			VISIT_DATE,
			SHOP_ID,
			SALE_CURRENT,
			SALE_TARGET,
			ACHIEVED,
			SALE_TOTAL_QTY,
			SALE_PB_QTY,
			REMARK,
			CREATE_BY,
			CREATE_TIME,
			UPDATE_BY,
			UPDATE_TIME
		) VALUES(
			#{visitDate},
			#{shopId},
			#{currentSaleQty},
			#{targetSaleQty},
			#{achieved},
			#{saleTotalQty},
			#{salePbQty},
			#{remark},
			#{createBy},
			#{createTime},
			#{updateBy},
			#{updateTime}
		)
	</insert>
	<select id="queryVisitSummaryHistory" parameterType="VisitPlanParamDto"
		resultMap="VisitHistorySummaryDtoResultMapper">
		SELECT VISIT_DATE,COUNT(*) AS VISIT_QTY FROM T_VISIT
		WHERE 1=1
		<include refid="commonConditionByParam"/>
		GROUP BY VISIT_DATE
	</select>
	
	<select id="queryVisitScoreInfoByVisitId" parameterType="java.lang.Long" resultMap="VisitShopDetailDtoResultMapper">
		SELECT 
			v.SHOP_SCORE, 
			v.SALE_SCORE, 
			v.STAFF_SCORE, 
			v.TOTAL_SCORE,
			f.ISSUE,
			f.ACTION
		FROM T_VISIT_SCORE v 
		LEFT JOIN T_VISIT_FEEDBACK f ON v.VISIT_ID = f.VISIT_ID
		WHERE v.VISIT_ID = #{visitId}
	</select>
	
	<select id="queryVisitScoreItemInfoByVisitId" parameterType="java.lang.Long" resultMap="VisitScoreInfoDtoResultMapper">
		SELECT 
			s.TYPE, 
			s.DESC_CN, 
			s.DESC_EN, 
			v.SCORE
		FROM T_VISIT_SCORE_ITEM v LEFT JOIN T_VISIT_SCORE_SETTING s ON v.SCORE_SETTING_ID = s.ID 
		WHERE v.VISIT_ID = #{visitId}
	</select>
	
	<select id="queryIssueByVisitId" parameterType="java.lang.Long" resultType="java.lang.String">
		SELECT v.ISSUE FROM T_VISIT_FEEDBACK v WHERE v.VISIT_ID = #{visitId}
	</select>
	<select id="queryVisitHistoryModelListByVisitId" parameterType="java.lang.Long" resultMap="VisitModelDetailDtoResultMapper">
		SELECT m.SERIES_CODE, m.MODEL_CODE FROM T_VISIT_MODEL v LEFT JOIN T_MODEL m ON v.MODEL_ID = m.ID WHERE v.VISIT_ID = #{visitId}
	</select>
	<select id="queryVisitHistorySaleListByVisitId" parameterType="java.lang.Long" resultMap="VisitSaleDetailDtoResultMapper">
		SELECT m.MODEL_CODE, s.SALE_QTY FROM T_VISIT_SALE s LEFT JOIN T_MODEL m ON s.MODEL_ID = m.ID WHERE s.VISIT_ID = #{visitId}
	</select>
	<select id="queryVisitHistoryCompetitorListByVisitId" parameterType="java.lang.Long" resultMap="VisitCompetitorInfoDtoResultMapper">
		SELECT c.BRAND_NAME, c.SALE_QTY FROM T_VISIT_COMPETITOR c WHERE c.VISIT_ID = #{visitId}
	</select>
	<select id="queryVisitHistoryMaterielListByVisitId" parameterType="java.lang.Long" resultMap="VisitMaterielDetailDtoResultMapper">
		SELECT m.NAME_EN, m.TYPE FROM T_VISIT_MATERIEL v LEFT JOIN T_MATERIEL m ON v.MATERIEL_ID = m.ID WHERE v.VISIT_ID = #{visitId}
	</select>
</mapper>