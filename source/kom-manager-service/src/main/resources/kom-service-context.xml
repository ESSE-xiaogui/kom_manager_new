<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xmlns:aop="http://www.springframework.org/schema/aop"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                  http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/tx
                http://www.springframework.org/schema/tx/spring-tx.xsd
                http://www.springframework.org/schema/aop
                http://www.springframework.org/schema/aop/spring-aop.xsd
                http://www.springframework.org/schema/context
                http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- <context:property-placeholder location="classpath:**/db.properties"/> -->
    <context:annotation-config/>
    <context:component-scan base-package="com.transsion"/>

    <aop:aspectj-autoproxy />

    <beans:bean id="paginationPlugin" class="com.shangkang.core.plugin.MysqlPaginationPlugin"></beans:bean>

    <beans:bean id="dataSource"
          class="com.alibaba.druid.pool.DruidDataSource"
          destroy-method="close">
        <beans:property name="driverClassName">
            <beans:value>${db.driverClassName}</beans:value>
        </beans:property>
        <beans:property name="url">
           <beans:value>${db.url}</beans:value> 
        </beans:property>
        <beans:property name="username">
            <beans:value>${db.name}</beans:value>
        </beans:property>
        <beans:property name="password">
            <beans:value>${db.pwd}</beans:value>
        </beans:property>
        <beans:property name="validationQuery">
            <beans:value>${db.validationQuery}</beans:value>
        </beans:property>
        <beans:property name="maxActive">
            <beans:value>${db.maxActive}</beans:value>
        </beans:property>
        <beans:property name="maxWait">
            <beans:value>${db.maxWait}</beans:value>
        </beans:property>
    </beans:bean>

    <!-- SqlSessionFactoryBean  spring整合ibatis的入口 -->
    <beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <beans:property name="mapperLocations" value="classpath*:ibatis/mapper/**/*.xml"/>
        <beans:property name="dataSource" ref="dataSource"/>
        <beans:property name="typeAliasesPackage"
                        value="com.transsion.store.bo"/>
                     <!--    ;com.transsion.kom.dto -->
        <beans:property name="plugins">
            <beans:list>
                <beans:ref bean="paginationPlugin"/>
            </beans:list>
        </beans:property>
    </beans:bean>

    <!-- Transaction manager for a single JDBC DataSource -->
    <beans:bean id="springJdbcTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <beans:property name="dataSource" ref="dataSource"/>
    </beans:bean>

    <!-- 定义事务传播属性 -->
    <tx:advice id="txAdvice" transaction-manager="springJdbcTransactionManager">
        <tx:attributes>
            <tx:method name="query*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="list*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="get*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="find*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="validate*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="modify*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="build*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="cancel*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="edit*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="save*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="create*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="execute*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="ext*" propagation="REQUIRES_NEW" rollback-for="Exception"/>
            <tx:method name="processBatch*" propagation="REQUIRES_NEW" rollback-for="Exception"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="transactionPointCut" expression="execution(* com.transsion.store.facade.*.*.*(..))"/>
        <aop:advisor pointcut-ref="transactionPointCut" advice-ref="txAdvice"/>
    </aop:config>

    <!-- ScanMapperFiles -->
    <beans:bean name="mapperScanConfig" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <beans:property name="basePackage" value="com.transsion.store.mapper"/>
        <beans:property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </beans:bean>

</beans:beans>