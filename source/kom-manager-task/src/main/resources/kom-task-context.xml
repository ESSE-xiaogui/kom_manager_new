<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/tx 
      http://www.springframework.org/schema/tx/spring-tx.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop.xsd
	    http://www.springframework.org/schema/jms
	    http://www.springframework.org/schema/jms/spring-jms.xsd">
 	<context:property-placeholder location="classpath:**/quartz.properties" ignore-unresolvable="true"/>
<!--	<context:property-placeholder location="classpath:**/mq.properties"/> -->
	<context:annotation-config />
	<context:component-scan base-package="com.transsion.store.task" />
	<aop:aspectj-autoproxy />

  <bean id="springBeanHelper" class="com.shangkang.core.util.SpringBeanHelper"/>
  <bean id="authKeyGenerator" class="com.rest.service.security.simple.DefaultAuthKeyGenerator" />


	<!-- AWS side ActiveMQ config -->
	
	 <!-- message consumer -->
	<bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="${inner.mq.url}" />
	</bean>

	<bean id="connectionFactory"
		class="org.springframework.jms.connection.SingleConnectionFactory">
		<property name="targetConnectionFactory" ref="targetConnectionFactory" />
	</bean>

  <bean id="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">
    <constructor-arg>
      <value>queue.kom.task</value>
    </constructor-arg>
  </bean>

  <bean id="scheduleQueueDestination" class="org.apache.activemq.command.ActiveMQQueue">
    <constructor-arg>
      <value>queue.kom.task.schedule</value>
    </constructor-arg>
  </bean>

  <bean id="messageHandler" class="com.transsion.kom.job.msg.MessageHandler" />

  <bean id="scheduleMessageHandler" class="com.transsion.kom.job.msg.ScheduleMessageHandler" />

	<bean id="queueListenerContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="queueDestination" />
		<property name="messageListener" ref="messageHandler" />
	</bean>
	
	 <bean id="scheduleQueueListenerContainer"
    class="org.springframework.jms.listener.DefaultMessageListenerContainer">
    <property name="connectionFactory" ref="connectionFactory" />
    <property name="destination" ref="scheduleQueueDestination" />
    <property name="messageListener" ref="scheduleMessageHandler" />
  </bean>

   <bean id="scheduleJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
    <property name="connectionFactory" ref="connectionFactory"/>
    <property name="defaultDestination" ref="scheduleQueueDestination" />
  </bean>

  <import resource="classpath*:kom-right-context.xml"/>
  <import resource="classpath*:kom-service-context.xml" />
  	 
  	 <!-- 使用JobDetailFactoryBean -->  
    <bean name="quartzTacJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">  
        <property name="jobClass" value="${task.tac.sync}" /> 
    </bean>  
    
    <bean id="tacCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
        <property name="jobDetail" ref="quartzTacJob"/>  
        <property name="cronExpression" value="${task.tac.time}"/>  
    </bean> 
  	
    <!-- 配置SchedulerFactoryBean -->  
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
        <property name="triggers">  
            <list>
               <ref bean="tacCronTrigger"/>
            </list>  
        </property>  
    </bean> 
</beans>